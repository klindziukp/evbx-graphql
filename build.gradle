plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "2.8"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

group = 'com.evbx.graphql'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	mavenCentral()
	mavenLocal()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:7.0.1'
	implementation 'com.graphql-java-kickstart:graphql-java-tools:6.0.2'
	implementation 'org.apache.httpcomponents:httpclient:4.5.10'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.github.tomakehurst:wiremock:2.26.3'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
	testCompile 'org.junit.jupiter:junit-jupiter-params:5.4.2'
	testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "klindziukp_evbx-graphql"
		property "sonar.exclusions", "**/apiclient/**,**/config/**,**/exception/**,**/model/**,**/util/**,**/EvbxGraphqlApplication.java"
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
	afterEvaluate {
		def classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/apiclient/**',
					'**/config/**',
					'**/constant/**',
					'**/exception/**',
					'**/model/**',
					'**/util/**',
					'**/*ApiClientServiceImpl*.*',
					'**/*EvbxProductApplication*.*'
			])
		})
	}
}

check.dependsOn jacocoTestReport